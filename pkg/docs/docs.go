// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "William Darian",
            "email": "williamdariansutedjo@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "put": {
                "description": "Creates a new shortened link for the provided URL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Create a new link",
                "parameters": [
                    {
                        "description": "Target URL",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShortenLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link created successfully.",
                        "schema": {
                            "$ref": "#/definitions/LinkResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    }
                }
            }
        },
        "/{path}": {
            "get": {
                "description": "Redirects to the original URL for the given shortened path.",
                "tags": [
                    "link"
                ],
                "summary": "Access a link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortened path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Redirects to the target URL."
                    },
                    "404": {
                        "description": "Link not found or inactive."
                    }
                }
            }
        },
        "/{path}/disable": {
            "patch": {
                "description": "Disables the link with the given path and secret. Idempotent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Disable a link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortened path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token containing admin secret",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link disabled successfully.",
                        "schema": {
                            "$ref": "#/definitions/LinkResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid admin secret."
                    },
                    "404": {
                        "description": "Link not found."
                    }
                }
            }
        },
        "/{path}/edit": {
            "patch": {
                "description": "Edits the target URL for the given path and secret. Idempotent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Edit a link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortened path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token containing admin secret",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Target URL",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShortenLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link edited successfully.",
                        "schema": {
                            "$ref": "#/definitions/LinkResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "401": {
                        "description": "Invalid admin secret."
                    },
                    "404": {
                        "description": "Link not found."
                    }
                }
            }
        },
        "/{path}/enable": {
            "patch": {
                "description": "Enables the link with the given path and secret. Idempotent.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Enable a link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortened path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer token containing admin secret",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link enabled successfully.",
                        "schema": {
                            "$ref": "#/definitions/LinkResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid admin secret."
                    },
                    "404": {
                        "description": "Link not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "LinkResponse": {
            "type": "object",
            "required": [
                "active",
                "path",
                "secret",
                "target"
            ],
            "properties": {
                "active": {
                    "description": "Whether the link is active.",
                    "type": "boolean",
                    "example": true
                },
                "path": {
                    "description": "The shortened path.",
                    "type": "string",
                    "example": "abc12345"
                },
                "secret": {
                    "description": "The secret key for managing the link.",
                    "type": "string",
                    "format": "uuid",
                    "example": "bcc9a044-918a-4ffa-ae4b-75274ca23668"
                },
                "target": {
                    "description": "The target URL.",
                    "type": "string",
                    "format": "url",
                    "example": "https://www.google.com"
                }
            }
        },
        "ShortenLinkRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "description": "The target URL to shorten.",
                    "type": "string",
                    "format": "url",
                    "example": "https://www.google.com"
                }
            }
        }
    },
    "externalDocs": {
        "description": "GitHub",
        "url": "https://github.com/risk1996/goshort"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Goshort",
	Description:      "A simple Go-based service to manage shortened links with support for create, access, edit, enable, and disable functionalities.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
